/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chitchat;

import static chitchat.NewJFrame.in;
import static chitchat.NewJFrame.soc;
import java.awt.Color;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import static java.lang.System.exit;
import static java.lang.Thread.sleep;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.crypto.Data;
import java.net.*;
import static jdk.nashorn.internal.objects.ArrayBufferView.buffer;


/**
 *
 * @author Dx
 */
public class un extends javax.swing.JFrame {

    /**
     * Creates new form un
     */
    protected static Socket soc=null;
    protected static Socket soc2=null;
    protected static Socket soc3=null;
    protected static  DataInputStream in;
    protected static  DataInputStream inf;
   protected static DataOutputStream out;
    protected static DataOutputStream out2;
    protected static  InputStream is;
    static InputStream ins;
    protected String finalmsg;
    static int flage=0;
    static OutputStream os;
    String sendfile;
    boolean whichfile=false;
    FileInputStream fs;
    File fc;
    String name;
    int red=0;
    int green=0;
    int blue= 0;
    boolean cl=true;
    public static   int BUFFER_SIZE = 1024 * 500;
     public byte[] buffer;
    String kd=null; 
    
    public un( ) {
        //soc=s;
        initComponents();
        filehandle fh= new filehandle();
        fh.start();
       // initialize();
        //chathandle ct= new chathandle();
        //ct.start();
        
        
    }
    
    public un(Socket s, Socket s2,Socket s3, String n ) {
        name=n;
        soc=s;
        soc2=s2;
        soc3=s3;
        initComponents();
        initialize();
        chathandle ct= new chathandle();
        ct.start();
      //  filehandle fh= new filehandle();
      // fh.start();
        colorchange ch=new colorchange();
        ch.start();
        
    }
    void initialize()
    {
        try{
        in = new DataInputStream(soc.getInputStream());
        out= new DataOutputStream(soc.getOutputStream());
        out2= new DataOutputStream(soc2.getOutputStream());
         is= soc.getInputStream();
         os = soc.getOutputStream();
         buffer = new byte[1024*50];
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        popupMenu3 = new java.awt.PopupMenu();
        popupMenu4 = new java.awt.PopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        showmsg = new javax.swing.JTextArea();
        tx1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        popupMenu3.setLabel("popupMenu3");

        popupMenu4.setLabel("popupMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        showmsg.setEditable(false);
        showmsg.setColumns(20);
        showmsg.setFont(new java.awt.Font("Nokia Pure Text Light", 0, 24)); // NOI18N
        showmsg.setForeground(new java.awt.Color(204, 0, 204));
        showmsg.setRows(5);
        jScrollPane1.setViewportView(showmsg);

        tx1.setDragEnabled(true);
        tx1.setFocusable(false);
        tx1.setFocusable(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chitchat/send1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chitchat/imagec.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chitchat/music.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chitchat/rsz_03header.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(tx1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addComponent(tx1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        
        if(whichfile==false){
            System.out.println("msg send place");
        String outmsg="";
        outmsg= name+" : "+tx1.getText();
        if(finalmsg==null)
        {
            finalmsg=outmsg;
        }
        else if(finalmsg!=null){
        finalmsg= finalmsg+outmsg;
        }
        showmsg.setText(finalmsg);
        finalmsg=finalmsg+"\n";
         try {
            out.writeUTF(outmsg);
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
        if(whichfile==true)
        {
            try {
                
                //fs= new FileInputStream(fc);
                String sendfile2= fc.getAbsolutePath();
         out.writeUTF("999"+sendfile2);
        
                File myFile; 
                        myFile=fc;
      BufferedInputStream in1 = 
               new BufferedInputStream(
                    new FileInputStream(sendfile));
                System.out.println(fc);
              //  System.out.println("maa_druga");
                System.out.println(soc2);
          BufferedOutputStream out1 = 
               new BufferedOutputStream(soc2.getOutputStream());
                
          
          int len = 0;
          while ((len = in1.read(buffer)) > 0) {
               out1.write(buffer, 0, len);
               System.out.print("#");
               System.out.println(len);
          }
                System.out.println("not sent");
          fc=null;
          sendfile= null;
         // in1.close();
        //  out1.flush();
          //out1.close();
          //soc2.close();
      //sock.close()
                 
            } catch (Exception ex) {
                Logger.getLogger(un.class.getName()).log(Level.SEVERE, null, ex);
            }
            fc=null;
           
        }
         whichfile =false;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Choose Image not more than 5 mb", "WARNING", JOptionPane.ERROR_MESSAGE);
        JFileChooser f= new JFileChooser();
        FileNameExtensionFilter filter=new FileNameExtensionFilter("*.Images","jpg","png","gif");
        f.setFileFilter(filter);
        f.showSaveDialog(null);
         fc= f.getSelectedFile();
         sendfile= fc.getPath();
      // sendfile.replaceAll("\\", "\\\\");
        System.out.println(sendfile);
         if(fc.exists()==true)
         {
             whichfile= true;
         }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Choose Audio not more than 5 mb", "WARNING", JOptionPane.ERROR_MESSAGE);
        JFileChooser f= new JFileChooser();
        FileNameExtensionFilter filter=new FileNameExtensionFilter("*.Audio","wav","mp3","dct","m4a");
        f.setFileFilter(filter);
        f.showSaveDialog(null);
         fc= f.getSelectedFile();
         if(fc.exists()==true)
         {
             whichfile= true;
         }
        try {
            sendfile= fc.getCanonicalPath();
        } catch (IOException ex) {
            Logger.getLogger(un.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sendfile);
    }//GEN-LAST:event_jButton4ActionPerformed

    /*        */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        game gm= new game(soc2);
        try {
            out.writeUTF("(game)");
        } catch (IOException ex) {
            Logger.getLogger(un.class.getName()).log(Level.SEVERE, null, ex);
        }
        gm.setVisible(true);
       // this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    public void filehandle(String path)
    {
        try{
                //while(2>1){
       BufferedInputStream in1 = 
               new BufferedInputStream(soc2.getInputStream());
                System.out.println("1 st gap");
           BufferedOutputStream out1 = 
               new BufferedOutputStream(new FileOutputStream(path));
                System.out.println("2nd gape");
          int len = 0;
          while ((len = in1.read(buffer)) > 0) {
               out1.write(buffer, 0, len);
               System.out.print("#");
               System.out.println(buffer);
              // if(len<=41593)
                //   break;
          }
         // in1.close();
          //out1.flush();
          //out1.close();
                    System.out.println("end gap");
                    JOptionPane.showMessageDialog(null,"A File recived");
                    in1=null;
                    buffer=null;
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
            
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(un.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(un.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(un.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(un.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new un().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private java.awt.PopupMenu popupMenu3;
    private java.awt.PopupMenu popupMenu4;
    private javax.swing.JTextArea showmsg;
    private static javax.swing.JTextField tx1;
    // End of variables declaration//GEN-END:variables
public class chathandle extends Thread{
    
    public void run()
    {
       
        String inmsg=null;
        while(2>1){
            
            System.out.println("msg recive place");
            try{
                 System.out.println(".................");
            inmsg=in.readUTF();
            
            
                System.out.println(".................");
            }catch(Exception E)
            {
                System.out.println(E);
            }
            //System.out.println(inmsg);
            if(inmsg!=null){
             if(finalmsg==null)
              {
                    finalmsg=inmsg;
                    if(inmsg.startsWith("999") )
            {
                
                kd=inmsg.substring(inmsg.length() - 7);
                finalmsg=finalmsg+ "Recived a file  "+kd+"\n";
                showmsg.setText(finalmsg);
                filehandle(kd);
               // filehandle fh= new filehandle(kd);
               // fh.start();
               
            }
                    if(inmsg.endsWith("(game)")|| inmsg.equals("(game)"))
                    {
                        game gm= new game(soc2);
                        gm.setVisible(true);
                    }
             }
             else if(finalmsg!=null){
                 if(inmsg.startsWith("999") )
            {
                
                kd=inmsg.substring(inmsg.length() - 7);
               // filehandle fh= new filehandle(kd);
                //fh.start();
                finalmsg=finalmsg+ "Recived a file   "+kd+"\n";
                showmsg.setText(finalmsg);
                filehandle(kd);
                
             
            }
                 if(inmsg.endsWith("(game)")|| inmsg.equals("(game)"))
                    {
                        game gm= new game(soc2);
                        gm.setVisible(true);
                    }
            finalmsg=finalmsg+ inmsg;
            
            }
          //  showmsg.setForeground(Color. green);
            showmsg.setText(finalmsg);
            }
            inmsg=null;
            finalmsg=finalmsg+"\n";
        }
        
    }
}
public   class filehandle extends Thread{
    
            
    String path;
    filehandle(String s)
    {
        path=s;
    }
    filehandle()
    {
        
    }
    public void run(){
      //  while(2>1){
            try{
                while(2>1){
       BufferedInputStream in1 = 
               new BufferedInputStream(soc2.getInputStream());
                System.out.println("1 st gap");
           BufferedOutputStream out1 = 
               new BufferedOutputStream(new FileOutputStream(path));
                System.out.println("2nd gape");
          int len = 0;
          while ((len = in1.read(buffer)) > -1) {
               out1.write(buffer, 0, len);
               System.out.print("#");
          }
          in1.close();
          out1.flush();
          out1.close();
                    System.out.println("end gap");
            }}
            catch(Exception e)
            {
                System.out.println(e);
            }
            }
    
            /* while(2>1){
            
            System.out.println("bareeeee");
            if(path!=null)
            {
            System.out.println("sadfsdfsafs");
            kam(path);
            }
            
            
            }
            
            }
            public void kam(String s)
            {*/
     //  }
    }
        
    


public class colorchange extends Thread{
    public void run()
    {
        while(true){
        Color mycolor= new Color(red,green,blue);
        {
                try //  if(cl==true)
                {
                    if(red<255){
                        red++;
                        sleep(50);
                    }
                    
                    if(red==255&&green<255)
                    {
                        green++;
                        sleep(50);
                    }
                    
                    if(green==255&&blue<255)
                    {
                        blue++;
                        sleep(50);
                    }
                    
                    if(red>=255&&green>=255&&blue>=255)
                    {
                        red=50;
                        green=50;
                        blue=50;
                    }
                   // System.out.println(red+" "+green+" "+blue);
                    // }
                    
                    getContentPane().setBackground(mycolor);
                } catch (InterruptedException ex) {
                    Logger.getLogger(un.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    }
}
}
}



